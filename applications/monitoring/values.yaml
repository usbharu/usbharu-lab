ingress:
  enabled: false
  annotations:
    cert-manager.io/cluster-issuer: "selfsigning-issuer"
  hosts:
    - "grafana.lab.usbharu.dev.internal"
  tls:
    - hosts:
        - "grafana.lab.usbharu.dev.internal"
      secretName: grafana-selfsigning-cert
service:
  externalPort: 80

kube-prometheus-stack:
  defaultRules:
    create: true
  kubeControllerManager:
    enabled: false
  kubeScheduler:
    enabled: false
  kubeProxy:
    enabled: false
  kubeEtcd:
    enabled: false
  prometheus-node-exporter:
    hostRootFsMount:
      enabled: false
  prometheus:
    prometheusSpec:
      podMonitorSelectorNilUsesHelmValues: false
      probeSelectorNilUsesHelmValues: false
      ruleSelectorNilUsesHelmValues: false
      serviceMonitorSelectorNilUsesHelmValues: false
      logLevel: info

  alertmanager:
    alertmanagerSpec:
      replicas: 2
    enabled: true
    config:
      route:
        receiver: "discord-webhook"
        routes:
          - receiver: "discord-webhook"
      receivers:
        - name: "discord-webhook"
          discord_configs:
            #          webhook_configs:
            - webhook_url: "https://example.com"
              send_resolved: true
  grafana:
    sidecar:
      dashboards:
        annotations:
          grafana_folder: "kubernetes"
        folderAnnotation: "grafana_folder"
        provider:
          foldersFromFilesStructure: true
    additionalDataSources:
      - access: proxy
        isDefault: false
        name: loki
        orgId: 1
        type: loki
        url: http://kube-prometheus-stack-loki.monitoring:3100/
        version: 1